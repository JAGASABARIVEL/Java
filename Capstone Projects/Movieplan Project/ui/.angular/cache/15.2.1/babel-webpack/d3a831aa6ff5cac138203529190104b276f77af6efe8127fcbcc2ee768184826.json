{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminService {\n  constructor(browser) {\n    this.browser = browser;\n    this.url = \"http://localhost:8080\";\n    this.categoryApi = \"/api/categories\";\n    this.productApi = \"/api/products\";\n  }\n  // addCategory(category:string){\n  //     let addCategoryApi:string = this.url + this.categoryApi + \"/add\";\n  //     return this.browser.post(addCategoryApi, \n  //         {name : category}, \n  //         {responseType: 'text'}\n  //         );\n  // }\n  addProducts(pName, pImage, pBrand, pDesc, pCategory, pPrice, quantity) {\n    let registerApi = this.url + this.productApi + \"/add\";\n    let uprice = Number(pPrice);\n    let uquantity = Number(quantity);\n    return this.browser.post(registerApi, {\n      pName: pName,\n      pImage: pImage,\n      pBrand: pBrand,\n      pDesc: pDesc,\n      pCategory: pCategory,\n      pPrice: uprice,\n      quantity: uquantity\n    }, {\n      responseType: 'text'\n    });\n  }\n}\nAdminService.ɵfac = function AdminService_Factory(t) {\n  return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n};\nAdminService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdminService,\n  factory: AdminService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,YAAY;EAKrBC,YAAoBC,OAAoB;IAApB,YAAO,GAAPA,OAAO;IAJ3B,QAAG,GAAU,uBAAuB;IACpC,gBAAW,GAAU,iBAAiB;IACtC,eAAU,GAAU,eAAe;EAEO;EAE1C;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,WAAW,CACPC,KAAY,EACZC,MAAa,EACbC,MAAa,EACbC,KAAY,EACZC,SAAgB,EAChBC,MAAa,EACbC,QAAe;IAEf,IAAIC,WAAW,GAAU,IAAI,CAACC,GAAG,GAAG,IAAI,CAACC,UAAU,GAAG,MAAM;IAC5D,IAAIC,MAAM,GAAGC,MAAM,CAACN,MAAM,CAAC;IAC3B,IAAIO,SAAS,GAAGD,MAAM,CAACL,QAAQ,CAAC;IAEhC,OAAO,IAAI,CAACR,OAAO,CAACe,IAAI,CAACN,WAAW,EAChC;MACIP,KAAK,EAAIA,KAAK;MACdC,MAAM,EAAGA,MAAM;MACfC,MAAM,EAAGA,MAAM;MACfC,KAAK,EAAIA,KAAK;MACdC,SAAS,EAACA,SAAS;MACnBC,MAAM,EAAGK,MAAM;MACfJ,QAAQ,EAACM;KACZ,EACD;MAACE,YAAY,EAAE;IAAM,CAAC,CACrB;EACT;;AAxCSlB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAmB,SAAZnB,YAAY;EAAAoB,YAFR;AAAM","names":["AdminService","constructor","browser","addProducts","pName","pImage","pBrand","pDesc","pCategory","pPrice","quantity","registerApi","url","productApi","uprice","Number","uquantity","post","responseType","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Jagasabarivel K\\OneDrive - Dell Technologies\\Documents\\Simplilearn Class Project\\Capstone Project\\ui\\src\\app\\service\\admin.service.ts"],"sourcesContent":["import { Injectable } from  '@angular/core';\r\nimport { HttpClient } from  '@angular/common/http';\r\n\r\n@Injectable( {\r\n    providedIn : \"root\"\r\n})\r\nexport class AdminService{\r\n    url:string = \"http://localhost:8080\";\r\n    categoryApi:string = \"/api/categories\";\r\n    productApi:string = \"/api/products\";\r\n\r\n    constructor(private browser : HttpClient){}\r\n\r\n    // addCategory(category:string){\r\n    //     let addCategoryApi:string = this.url + this.categoryApi + \"/add\";\r\n    //     return this.browser.post(addCategoryApi, \r\n    //         {name : category}, \r\n    //         {responseType: 'text'}\r\n    //         );\r\n    // }\r\n    \r\n    addProducts(\r\n        pName:string,\r\n        pImage:string,\r\n        pBrand:string,\r\n        pDesc:string,\r\n        pCategory:string,\r\n        pPrice:number,\r\n        quantity:number\r\n    ){\r\n        let registerApi:string = this.url + this.productApi + \"/add\";\r\n        let uprice = Number(pPrice);\r\n        let uquantity = Number(quantity);\r\n\r\n        return this.browser.post(registerApi, \r\n            {\r\n                pName  : pName,\r\n                pImage : pImage,\r\n                pBrand : pBrand,\r\n                pDesc  : pDesc,\r\n                pCategory:pCategory,\r\n                pPrice : uprice,\r\n                quantity:uquantity\r\n            }, \r\n            {responseType: 'text'}\r\n            );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}