{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminService {\n  constructor(browser) {\n    this.browser = browser;\n    this.url = \"http://localhost:8080\";\n    this.categoryApi = \"/api/categories\";\n    this.productApi = \"/api/products\";\n  }\n  addCategory(category) {\n    let addCategoryApi = this.url + this.categoryApi + \"/add\";\n    return this.browser.post(addCategoryApi, {\n      name: category\n    }, {\n      responseType: 'text'\n    });\n  }\n  addProducts(mId, mName, mImage, tickets, price) {\n    let registerApi = this.url + this.productApi + \"/add\";\n    let uprice = Number(pPrice);\n    let uquantity = Number(quantity);\n    return this.browser.post(registerApi, {\n      pName: pName,\n      pImage: pImage,\n      pBrand: pBrand,\n      pDesc: pDesc,\n      pCategory: pCategory,\n      pPrice: uprice,\n      quantity: uquantity\n    }, {\n      responseType: 'text'\n    });\n  }\n}\nAdminService.ɵfac = function AdminService_Factory(t) {\n  return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n};\nAdminService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdminService,\n  factory: AdminService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,YAAY;EAKrBC,YAAoBC,OAAmB;IAAnB,YAAO,GAAPA,OAAO;IAJ3B,QAAG,GAAW,uBAAuB;IACrC,gBAAW,GAAW,iBAAiB;IACvC,eAAU,GAAW,eAAe;EAEO;EAE3CC,WAAW,CAACC,QAAgB;IACxB,IAAIC,cAAc,GAAW,IAAI,CAACC,GAAG,GAAG,IAAI,CAACC,WAAW,GAAG,MAAM;IACjE,OAAO,IAAI,CAACL,OAAO,CAACM,IAAI,CAACH,cAAc,EACnC;MAAEI,IAAI,EAAEL;IAAQ,CAAE,EAClB;MAAEM,YAAY,EAAE;IAAM,CAAE,CAC3B;EACL;EAQAC,WAAW,CACPC,GAAW,EACXC,KAAa,EACbC,MAAc,EACdC,OAAe,EACfC,KAAa;IAEb,IAAIC,WAAW,GAAW,IAAI,CAACX,GAAG,GAAG,IAAI,CAACY,UAAU,GAAG,MAAM;IAC7D,IAAIC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAC;IAC3B,IAAIC,SAAS,GAAGF,MAAM,CAACG,QAAQ,CAAC;IAEhC,OAAO,IAAI,CAACrB,OAAO,CAACM,IAAI,CAACS,WAAW,EAChC;MACIO,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA,MAAM;MACdC,MAAM,EAAEA,MAAM;MACdC,KAAK,EAAEA,KAAK;MACZC,SAAS,EAAEA,SAAS;MACpBP,MAAM,EAAEF,MAAM;MACdI,QAAQ,EAAED;KACb,EACD;MAAEZ,YAAY,EAAE;IAAM,CAAE,CAC3B;EACL;;AA5CSV,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAA6B,SAAZ7B,YAAY;EAAA8B,YAFT;AAAM","names":["AdminService","constructor","browser","addCategory","category","addCategoryApi","url","categoryApi","post","name","responseType","addProducts","mId","mName","mImage","tickets","price","registerApi","productApi","uprice","Number","pPrice","uquantity","quantity","pName","pImage","pBrand","pDesc","pCategory","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Jagasabarivel K\\OneDrive - Dell Technologies\\Documents\\Simplilearn Class Project\\Capstone Project\\ui\\src\\app\\service\\admin.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class AdminService {\r\n    url: string = \"http://localhost:8080\";\r\n    categoryApi: string = \"/api/categories\";\r\n    productApi: string = \"/api/products\";\r\n\r\n    constructor(private browser: HttpClient) { }\r\n\r\n    addCategory(category: string) {\r\n        let addCategoryApi: string = this.url + this.categoryApi + \"/add\";\r\n        return this.browser.post(addCategoryApi,\r\n            { name: category },\r\n            { responseType: 'text' }\r\n        );\r\n    }\r\n\r\n    mId: number;\r\n    mName: number;\r\n    mImage: string;\r\n    tickets: number;\r\n    price: number;\r\n\r\n    addProducts(\r\n        mId: number,\r\n        mName: number,\r\n        mImage: string,\r\n        tickets: number,\r\n        price: number,\r\n    ) {\r\n        let registerApi: string = this.url + this.productApi + \"/add\";\r\n        let uprice = Number(pPrice);\r\n        let uquantity = Number(quantity);\r\n\r\n        return this.browser.post(registerApi,\r\n            {\r\n                pName: pName,\r\n                pImage: pImage,\r\n                pBrand: pBrand,\r\n                pDesc: pDesc,\r\n                pCategory: pCategory,\r\n                pPrice: uprice,\r\n                quantity: uquantity\r\n            },\r\n            { responseType: 'text' }\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}