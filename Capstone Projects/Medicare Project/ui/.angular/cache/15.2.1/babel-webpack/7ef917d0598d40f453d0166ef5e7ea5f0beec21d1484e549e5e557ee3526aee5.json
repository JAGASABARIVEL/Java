{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(browser) {\n    this.browser = browser;\n    this.url = \"http://localhost:8080\";\n    this.userApi = \"/api/user\";\n  }\n  login(phone, password) {\n    let loginApi = this.url + this.userApi + \"/login\";\n    let uphone = Number(phone);\n    return this.browser.post(loginApi, {\n      phone: uphone,\n      password: password\n    }, {\n      responseType: 'text'\n    });\n  }\n  register(phone, name, password) {\n    let registerApi = this.url + this.userApi + \"/register\";\n    let uphone = Number(phone);\n    return this.browser.post(registerApi, {\n      uName: name,\n      uPhone: uphone,\n      uPassword: password\n    }, {\n      responseType: 'text'\n    });\n  }\n  logout() {\n    localStorage.setItem('isLoggedIn', 'false');\n    localStorage.removeItem('token');\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAGpBC,YAAoBC,OAAoB;IAApB,YAAO,GAAPA,OAAO;IAF3B,QAAG,GAAU,uBAAuB;IACpC,YAAO,GAAU,WAAW;EACc;EAE1CC,KAAK,CAACC,KAAY,EAAEC,QAAe;IAC/B,IAAIC,QAAQ,GAAU,IAAI,CAACC,GAAG,GAAG,IAAI,CAACC,OAAO,GAAG,QAAQ;IACxD,IAAIC,MAAM,GAAGC,MAAM,CAACN,KAAK,CAAC;IAC1B,OAAO,IAAI,CAACF,OAAO,CAACS,IAAI,CAACL,QAAQ,EAC7B;MAACF,KAAK,EAAGK,MAAM;MAAEJ,QAAQ,EAAGA;IAAQ,CAAC,EACrC;MAACO,YAAY,EAAE;IAAM,CAAC,CACrB;EACT;EAEAC,QAAQ,CAACT,KAAY,EAAEU,IAAW,EAAET,QAAe;IAC/C,IAAIU,WAAW,GAAU,IAAI,CAACR,GAAG,GAAG,IAAI,CAACC,OAAO,GAAG,WAAW;IAC9D,IAAIC,MAAM,GAAGC,MAAM,CAACN,KAAK,CAAC;IAC1B,OAAO,IAAI,CAACF,OAAO,CAACS,IAAI,CAACI,WAAW,EAChC;MAACC,KAAK,EAAGF,IAAI;MAAEG,MAAM,EAAGR,MAAM;MAAES,SAAS,EAAGb;IAAQ,CAAC,EACrD;MAACO,YAAY,EAAE;IAAM,CAAC,CACrB;EACT;EAEAO,MAAM;IACFC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAC,OAAO,CAAC;IAC1CD,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;EAChC;;AA1BKtB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAuB,SAAXvB,WAAW;EAAAwB,YAFP;AAAM","names":["UserService","constructor","browser","login","phone","password","loginApi","url","userApi","uphone","Number","post","responseType","register","name","registerApi","uName","uPhone","uPassword","logout","localStorage","setItem","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Jagasabarivel K\\OneDrive - Dell Technologies\\Documents\\Capstone Projects\\Medicare Project\\ui\\src\\service\\users.service.ts"],"sourcesContent":["import { Injectable } from  '@angular/core';\r\nimport { HttpClient } from  '@angular/common/http';\r\n\r\n@Injectable( {\r\n    providedIn : \"root\"\r\n})\r\nexport class UserService{\r\n    url:string = \"http://localhost:8080\";\r\n    userApi:string = \"/api/user\"\r\n    constructor(private browser : HttpClient){}\r\n\r\n    login(phone:string, password:string){\r\n        let loginApi:string = this.url + this.userApi + \"/login\";\r\n        let uphone = Number(phone);\r\n        return this.browser.post(loginApi, \r\n            {phone : uphone, password : password}, \r\n            {responseType: 'text'}\r\n            );\r\n    }\r\n    \r\n    register(phone:string, name:string, password:string){\r\n        let registerApi:string = this.url + this.userApi + \"/register\";\r\n        let uphone = Number(phone);\r\n        return this.browser.post(registerApi, \r\n            {uName : name, uPhone : uphone, uPassword : password}, \r\n            {responseType: 'text'},\r\n            );\r\n    }\r\n\r\n    logout() :void {    \r\n        localStorage.setItem('isLoggedIn','false');    \r\n        localStorage.removeItem('token');    \r\n        } \r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}