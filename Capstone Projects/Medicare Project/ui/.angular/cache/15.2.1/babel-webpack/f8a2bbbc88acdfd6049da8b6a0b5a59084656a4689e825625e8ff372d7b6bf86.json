{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(browser) {\n    this.browser = browser;\n    this.url = \"http://localhost:8080\";\n    this.productApi = \"/api/products\";\n    this.cartApi = \"/api/cart\";\n    this.eventEmitter = new EventEmitter();\n  }\n  getProducts() {\n    let registerApi = this.url + this.productApi + \"/get\";\n    return this.browser.get(registerApi);\n  }\n  getProductById(pId) {\n    let registerApi = this.url + this.productApi + \"/get/\" + pId;\n    return this.browser.get(registerApi);\n  }\n  setCarts(product_id) {\n    let phone = localStorage.getItem(\"token\");\n    let registerApi = this.url + this.cartApi + \"/add/\" + phone;\n    return this.browser.post(registerApi, {\n      mId: 1\n    }, {\n      responseType: 'text'\n    });\n  }\n  getCarts() {\n    let phone = localStorage.getItem(\"token\");\n    let registerApi = this.url + this.cartApi + \"/get/\" + phone;\n    return this.browser.get(registerApi);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,QAAqB,eAAe;;;AAOzD,OAAM,MAAOC,cAAc;EAKvBC,YAAoBC,OAAoB;IAApB,YAAO,GAAPA,OAAO;IAJ3B,QAAG,GAAU,uBAAuB;IACpC,eAAU,GAAU,eAAe;IACnC,YAAO,GAAU,WAAW;IA+B3B,iBAAY,GAAwB,IAAIH,YAAY,EAAU;EA7BrB;EAI1CI,WAAW;IACP,IAAIC,WAAW,GAAU,IAAI,CAACC,GAAG,GAAG,IAAI,CAACC,UAAU,GAAG,MAAM;IAC5D,OAAO,IAAI,CAACJ,OAAO,CAACK,GAAG,CAACH,WAAW,CAAC;EACxC;EAECI,cAAc,CAACC,GAAY;IACxB,IAAIL,WAAW,GAAU,IAAI,CAACC,GAAG,GAAG,IAAI,CAACC,UAAU,GAAG,OAAO,GAAGG,GAAG;IACnE,OAAO,IAAI,CAACP,OAAO,CAACK,GAAG,CAACH,WAAW,CAAC;EACvC;EAEAM,QAAQ,CAACC,UAAkB;IACxB,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzC,IAAIV,WAAW,GAAU,IAAI,CAACC,GAAG,GAAG,IAAI,CAACU,OAAO,GAAG,OAAO,GAAGH,KAAK;IAClE,OAAO,IAAI,CAACV,OAAO,CAACc,IAAI,CAACZ,WAAW,EAChC;MAACa,GAAG,EAAG;IAAC,CAAC,EACT;MAACC,YAAY,EAAE;IAAM,CAAC,CACrB;EACR;EAEAC,QAAQ;IACL,IAAIP,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzC,IAAIV,WAAW,GAAU,IAAI,CAACC,GAAG,GAAG,IAAI,CAACU,OAAO,GAAG,OAAO,GAAGH,KAAK;IAClE,OAAO,IAAI,CAACV,OAAO,CAACK,GAAG,CAACH,WAAW,CAAC;EACvC;;AAhCQJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAoB,SAAdpB,cAAc;EAAAqB,YAFV;AAAM","names":["EventEmitter","ProductService","constructor","browser","getProducts","registerApi","url","productApi","get","getProductById","pId","setCarts","product_id","phone","localStorage","getItem","cartApi","post","mId","responseType","getCarts","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Jagasabarivel K\\OneDrive - Dell Technologies\\Documents\\Simplilearn\\ui\\src\\service\\product.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from  '@angular/core';\r\nimport { HttpClient } from  '@angular/common/http';\r\nimport { Products } from '../app/model/product.model';\r\n\r\n@Injectable( {\r\n    providedIn : \"root\"\r\n})\r\nexport class ProductService{\r\n    url:string = \"http://localhost:8080\";\r\n    productApi:string = \"/api/products\";\r\n    cartApi:string = \"/api/cart\";\r\n\r\n    constructor(private browser : HttpClient){}\r\n\r\n    products: Products[]\r\n    carts: Products[];\r\n    getProducts(){\r\n        let registerApi:string = this.url + this.productApi + \"/get\";\r\n        return this.browser.get(registerApi);\r\n    }\r\n\r\n     getProductById(pId : number){\r\n        let registerApi:string = this.url + this.productApi + \"/get/\" + pId;\r\n        return this.browser.get(registerApi);\r\n     }\r\n\r\n     setCarts(product_id: number){\r\n        let phone = localStorage.getItem(\"token\");\r\n        let registerApi:string = this.url + this.cartApi + \"/add/\" + phone;\r\n        return this.browser.post(registerApi, \r\n            {mId : 1}, \r\n            {responseType: 'text'}\r\n            );\r\n     }\r\n\r\n     getCarts(){\r\n        let phone = localStorage.getItem(\"token\");\r\n        let registerApi:string = this.url + this.cartApi + \"/get/\" + phone;\r\n        return this.browser.get(registerApi);\r\n     }\r\n\r\n     eventEmitter:EventEmitter<string> = new EventEmitter<string>();\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}